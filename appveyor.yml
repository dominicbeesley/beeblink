# https://www.appveyor.com/docs/getting-started-with-appveyor-for-linux/#running-windows-and-linux-builds-side-by-side

version: '{build}'

skip_tags: true

branches:
  only:
    - master

image:
  - Visual Studio 2017
  - macos-mojave

install:
  - uname
  - env
  - npm version
  - node --version
  
  # on macOS, select Node version using nvm.
  - sh: nvm ls
  - sh: nvm use 10

  # on Windows, select Node version using PowerShell Install-Product.
  - ps: |
      if ($env:CI_WINDOWS -eq $true) {
        # https://www.appveyor.com/docs/lang/nodejs-iojs/
        Install-Product node 10.13
      }

  - npm version
  - node --version
  - git submodule init
  - git submodule update

  - ps: |
  - ps: $env:SUFFIX = $(git log -1 --format=%cd-%h --date=format:%Y%m%d-%H%M%S $env:APPVEYOR_REPO_COMMIT)
  - ps: $env:RELEASE_NAME="beeblink-$env:SUFFIX"

build_script:
  - ps: |
      if ($env:CI_WINDOWS -eq $true) {
        Push-Location
        cd ./beeb
        ../tools/snmake

        cd .build
        7z a $env:RELEASE_NAME-roms.zip beeblink_avr_fe60.rom beeblink_tube_serial.rom beeblink_upurs_fe60.rom
        Push-AppveyorArtifact $env:RELEASE_NAME-roms.zip -DeploymentName output
      
        Pop-Location
      }
  - ps: Push-Location
  - ps: cd ./server
  - npm install
  - npm run compile
  - ps: |
      pwd
      if ($env:CI_WINDOWS -eq $true) {
        ./node_modules/.bin/pkg -t win .
        7z a $env:RELEASE_NAME-server-windows.zip beeblink-server.exe ./node_modules/@serialport/bindings/build/Release/bindings.node ./node_modules/usb/build/Release/usb_bindings.node
        Push-AppveyorArtifact $env:RELEASE_NAME-server-windows.zip -DeploymentName output
      } elseif ($env:CI_MACOS -eq $true) {
        ./node_modules/.bin/pkg -t macos-x64 .
        7z a $env:RELEASE_NAME-server-macos.zip beeblink-server ./node_modules/usb/build/Release/usb_bindings.node ./node_modules/@serialport/bindings/build/Release/bindings.node ./node_modules/ioctl/build/Release/ioctl.node
        Push-AppveyorArtifact $env:RELEASE_NAME-server-macos.zip -DeploymentName output
      }
  - ps: Pop-Location

# artifacts:
#   - path: $(OUTPUT_NAME)
#     name: output

deploy:
  - release: $(RELEASE_NAME)
    provider: GitHub
    auth_token:
      secure: T5CPAJmNl5j/eAVlQln8WoiFKTDkq2ebT9Y/PbWRbMIa4GFyov+t5QdqlU0O2sY9
    artifact: output
    draft: false
    prerelease: false
    on:
      branch: master
